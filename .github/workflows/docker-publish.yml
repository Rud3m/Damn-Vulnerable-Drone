name: Build & Push Docker images (multi-arch)

on:
  push:
    branches: [ "master" ]        # build every merge to main
    tags:    [ "v*.*.*" ]       # and any semver tag like v1.2.3
  workflow_dispatch:            # manual run button

env:
  REGISTRY: docker.io
  USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # ------------ list every DVD service here ------------
          - name: damn-vulnerable-drone-companion-computer
            context: companion-computer
            file: companion-computer/Dockerfile
            platforms: linux/amd64,linux/arm64
          - name: damn-vulnerable-drone-flight-controller
            context: flight-controller
            file: flight-controller/Dockerfile
            platforms: linux/amd64,linux/arm64
          - name: damn-vulnerable-drone-ground-control
            context: ground-control-station
            file: ground-control-station/Dockerfile
            platforms: linux/amd64,linux/arm64
          - name: damn-vulnerable-drone-simulator
            context: simulator
            file: simulator/Dockerfile
            platforms: linux/amd64,linux/arm64

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Set up QEMU (cross-arch emulation)
      uses: docker/setup-qemu-action@v3     # :contentReference[oaicite:0]{index=0}

    - name: Set up Buildx builder
      uses: docker/setup-buildx-action@v3   # :contentReference[oaicite:1]{index=1}

    - name: Log in to Docker Hub
      uses: docker/login-action@v3          # :contentReference[oaicite:2]{index=2}
      with:
        username: ${{ env.USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # docker/metadata-action generates sensible tags like
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5       # :contentReference[oaicite:3]{index=3}
      with:
        images: ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ matrix.name }}

    - name: Build & push ${{ matrix.name }}
      uses: docker/build-push-action@v5     # :contentReference[oaicite:4]{index=4}
      with:
        context: ${{ matrix.context }}
        file: ${{ matrix.file }}
        platforms: ${{ matrix.platforms }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ matrix.name }}:buildcache
        cache-to:   type=registry,ref=${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ matrix.name }}:buildcache,mode=max

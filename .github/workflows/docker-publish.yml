name: Build & Push Docker images (multi-arch)

on:
  push:
    branches: [ master ]
    tags:    [ "v*.*.*" ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  REPO_OWNER: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: damn-vulnerable-drone-companion-computer
            context: .
            file: companion-computer/Dockerfile
            platforms: linux/amd64,linux/arm64
          - name: damn-vulnerable-drone-flight-controller
            context: .
            file: flight-controller/Dockerfile
            platforms: linux/amd64,linux/arm64
          - name: damn-vulnerable-drone-ground-control
            context: .
            file: ground-control-station/Dockerfile
            platforms: linux/amd64,linux/arm64
          - name: damn-vulnerable-drone-simulator
            context: .
            file: simulator/Dockerfile
            platforms: linux/amd64,linux/arm64

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    # --- build prerequisites -------------------------------------------------
    - name: Set up QEMU (cross-arch)
      uses: docker/setup-qemu-action@v3

    - name: Set up Buildx builder
      uses: docker/setup-buildx-action@v3

    # --- registry login ------------------------------------------------------
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.REPO_OWNER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # --- compute canonical tags/labels --------------------------------------
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.name }}

    # --- build & push --------------------------------------------------------
    - name: Build & push ${{ matrix.name }}
      uses: docker/build-push-action@v5
      with:
        platforms:  ${{ matrix.platforms }}
        context:    ${{ matrix.context }}
        file:       ${{ matrix.file }}
        push:       true
        provenance: false
        tags:   ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

        cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.name }}:buildcache
        cache-to:   type=registry,ref=${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.name }}:buildcache,mode=max
